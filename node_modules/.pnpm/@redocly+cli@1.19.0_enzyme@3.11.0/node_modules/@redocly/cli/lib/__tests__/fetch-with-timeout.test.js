"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const abort_controller_1 = require("abort-controller");
const fetch_with_timeout_1 = require("../utils/fetch-with-timeout");
const node_fetch_1 = require("node-fetch");
jest.mock('node-fetch');
describe('fetchWithTimeout', () => {
    afterEach(() => {
        jest.clearAllMocks();
    });
    it('should call node-fetch with signal', async () => {
        // @ts-ignore
        global.setTimeout = jest.fn();
        global.clearTimeout = jest.fn();
        await (0, fetch_with_timeout_1.default)('url');
        expect(global.setTimeout).toHaveBeenCalledTimes(1);
        expect(node_fetch_1.default).toHaveBeenCalledWith('url', { signal: new abort_controller_1.default().signal });
        expect(global.clearTimeout).toHaveBeenCalledTimes(1);
    });
});
